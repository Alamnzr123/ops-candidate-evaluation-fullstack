name: Release

on:
  push:
    branches: [main, master]
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Setup Java (for maven wrapper)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"

      - name: Install root devDependencies
        run: npm ci

      - name: Ensure backend mvnw is executable
        run: chmod +x backend/mvnw || true

      - name: Configure git user
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      # NEW: generate package-lock.json for the frontend and commit if changed
      - name: Generate & commit frontend package-lock.json
        working-directory: ops-candidate-evaluation-frontend
        env:
          GIT_AUTHOR_NAME: "github-actions[bot]"
          GIT_AUTHOR_EMAIL: "github-actions[bot]@users.noreply.github.com"
        run: |
          # generate package-lock only (does not install node_modules)
          npm install --package-lock-only || npm install --package-lock-only
          cd ..
          git add ops-candidate-evaluation-frontend/package-lock.json
          # commit and push only if there are changes
          if ! git diff --staged --quiet; then
            git commit -m "chore(frontend): add/update package-lock.json [skip ci]" || true
            git push origin HEAD:${{ github.ref }} || true
          else
            echo "No package-lock changes to commit"
          fi

      - name: Run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release
